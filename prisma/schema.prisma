// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String? @unique
  password String? 
  phone String? @unique
  github_id String? @unique
  avatar String? 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  smsToken SMSToken[]
  products Product[]
  posts Post[]
  comments Comment[]
  likes Like[]
}

model SMSToken {
  id Int @id @default(autoincrement())
  token String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )
  userId Int
}

model Product {
  id Int @id @default(autoincrement())
  title String
  price Float
  description String
  photo String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )
  userId Int
}

model Post {
  id Int @id @default(autoincrement())
  title String
  description String?
  views Int @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [userid], references: [id], onDelete: Cascade )
  userid Int

  comments Comment[]
  likes Like[]
}

model Comment {
  id Int @id @default(autoincrement())
  payload String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId Int
  userId Int
}

model Like {
  @@id(name: "id", [userId, postId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  postId Int
}